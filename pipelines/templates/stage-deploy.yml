parameters:
  - name: imageTag
  - name: webAppName
  - name: environment
  - name: serviceConnection
  - name: name

stages:
  - stage: ${{ parameters.name }}
    displayName: "Deploy App ${{ parameters.environment }}"
    jobs:
      - job: "DeployContainerBackend"
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: "DCD Registry"
              command: "login"
          - template: step-tag-dockerimage.yml
            parameters:
              buildid: $(Build.BuildId)
              envshortname: ${{ parameters.environment }}
              registry: "crdcd.azurecr.io"
              repository: "backend"

          - template: step-deploycontainer.yml
            parameters:
              imageName: "backend"
              imageTag: $(Build.BuildId)
              webAppName: "${{ parameters.webAppName }}-backend-${{ parameters.environment }}"
              serviceConnection: "dcd-pipeline-sp"
              name: "DeployBackend_${{ parameters.environment }}"
      - job: "DeployContainerFrontend"
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: "DCD Registry"
              command: "login"
          - template: step-tag-dockerimage.yml
            parameters:
              buildid: $(Build.BuildId)
              envshortname: ${{ parameters.environment }}
              registry: "crdcd.azurecr.io"
              repository: "frontend"

          - template: step-deploycontainer.yml
            parameters:
              imageName: "frontend"
              imageTag: $(Build.BuildId)
              webAppName: "${{ parameters.webAppName }}-frontend-${{ parameters.environment }}"
              serviceConnection: "dcd-pipeline-sp"
              name: "DeployFrontend_${{ parameters.environment }}"
