parameters:
  - name: workSpace
  - name: buildId
  - name: dt_tenant
  - name: dt_password
  - name: dt_url
  - name: sourcesDirectory
  - name: name
  - name: azAppConfig

stages:
  - stage: ${{ parameters.name }}
    displayName: "Build App"
    jobs:
      - job: "Build_Fusion_App"
        steps:
          - powershell: |
              cd $(System.DefaultWorkingDirectory)
              $last_tag =  & 'git' 'describe' '--tags' '--abbrev=0'
              $modifiedTag = $last_tag.SubString(1)
              Write-Host "Version is $($modifiedTag)"
              Write-Host "##vso[task.setvariable variable=version;]$($modifiedTag)"
          - task: FileTransform@1
            inputs:
              folderPath: '$(Build.SourcesDirectory)/frontend'
              fileType: 'json'
              targetFiles: '**/package.json'
          - task: NodeTool@0
            inputs:
                versionSpec: "16.x"
          - task: Npm@1
            displayName: "NPM Install"
            inputs:
                command: "install"
                workingDir: "frontend"
          - task: Npm@1
            displayName: "Bundle frontend"
            inputs:
                command: "custom"
                workingDir: "frontend"
                customCommand: "run-script build"
          - task: PublishPipelineArtifact@1
            inputs:
                targetPath: "${{ parameters.workSpace }}/s/frontend/out/conceptapp.zip"
                artifactName: ConceptApp

      - job: "Build_backend_container_and_Push_To_acr"
        steps:
          - template: step-dtlogin.yml
            parameters:
              dt_tenant: ${{ parameters.dt_tenant }}
              dt_url: ${{ parameters.dt_url }}
              dt_password: ${{ parameters.dt_password }}

          - template: step-dtdockerbuild.yml
            parameters:
              dt_tenant: ${{ parameters.dt_tenant }}
              dt_url: ${{ parameters.dt_url }}
              dt_password: ${{ parameters.dt_password }}
              azAppConfig: ${{ parameters.azAppConfig }}
              buildId: $(Build.BuildId)
              sourcesDirectory: $(Build.SourcesDirectory)
              appName: "backend"

          - template: step-docker-push.yml
            parameters:
              name: "Push_backend-container_to_ACR"
              registry: "DCD Registry"
              repository: "backend"
              buildId: $(Build.BuildId)
