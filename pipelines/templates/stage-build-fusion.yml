parameters:
  - name: azAppConfig

stages:
  - stage: "DCD"
    displayName: "Build App"
    jobs:
      - job: "Build_Fusion_App"
        steps:
          - task: NodeTool@0
            inputs:
                versionSpec: "20.x"

          - task: Npm@1
            displayName: "NPM Install"
            inputs:
                command: "install"
                workingDir: "frontend"

          # Add build id to version in package.json
          - script: |
              buildId=$(Build.BuildId)
              currentVersion=$(jq -r '.version' frontend/package.json)
              majorMinorVersion=$(echo $currentVersion | cut -d. -f1,2)
              frontendVersion="$majorMinorVersion.$buildId"
              sed -i 's/"version": "'$currentVersion'"/"version": "'$frontendVersion'"/' frontend/package.json
            displayName: "Update version in package.json"

          - task: Npm@1
            displayName: "Build frontend"
            inputs:
                command: "custom"
                workingDir: "frontend"
                verbose: true
                customCommand: "run-script build"

          - task: PublishPipelineArtifact@1
            inputs:
                targetPath: "$(Pipeline.Workspace)/s/frontend/conceptapp.zip"
                artifactName: ConceptApp

      - job: "Build_backend_container_and_Push_To_acr"
        steps:
          - template: step-dockerbuild.yml
            parameters:
              azAppConfig: ${{ parameters.azAppConfig }}
              buildId: $(Build.BuildId)
              sourcesDirectory: $(Build.SourcesDirectory)
              appName: "backend"

          - template: step-docker-push.yml
            parameters:
              name: "Push_backend-container_to_ACR"
              registry: "DCD Registry"
              repository: "backend"
              buildId: $(Build.BuildId)
